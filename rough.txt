boards = 10 20 30 40 50 60
k = 3

high = 210, low = 0, mid = 105
10 20 30 40  50 60
ans 105

high = 104, low = 0, mid = 52
10 20   30   40  50
time zyada chahiye

high 104, low = 53, mid = 104+53/2=78
10 20 30    40      50      
zyada

high =104, low = 79 mid = 91
10 20 30    40 50   60
ans = 91

high = 90, low = 79, mid = 84
10 20 30    40      50
zyada

high = 90, low = 85, mid = 87
10 20 30    40      50
zyada

high = 90, low = 88, mid = 89
10 20 30    40      50
zyada

high = 90, low = 90, mid = 90
10 20 30    40 50       60
ans 90

1, 10
2

high = 11, low = 0, mid = 5
1   
zyada

high =11, low = 6 mid = 8
zyada

high = 11, low = 9 mid = 10
ans =10
high = 9, low = 9, mid = 9;

<----------------------->
maxsubarray sum.
arr = {-2, -3, 4, -1, -2, 1, 5, -3};
-2          : -2
-2 -3       : max (-3, -2+-3)
-2 -3 4     : max(  4, 4+ -3, 4+ -3 +-2)
-2 -3 4 -1 
.
.
.

-2, -3, 4, -1, -2, 1, 5, -3, -2, -3, 4, -1, -2, 1, 5, -3
temp = -2, sum<- -3
temp = 4, sum<- 4
temp = 4, sum<-



<---------->
buy at a low price and 
sell at a high price.
 then maximize this profit.

[7,1,5,3,6,4,0]
MAX = 0 diff = 0'

1. MAX = 4, diff = 0;
2. MAX = 6, diff = 0
3. MAX = 6, diff = 3
4. MAX = 6, diff = 3
5. MAX = 6, diff = 5
6. MAX =7, diff = 0;

<-------------->
-1, -2,+ -1, -2, -1, -2, -1, -2, -1, -2, -1, -2, -1, -2
1 2  1 2  1 2
0 0 1
1 1 

https://leetcode.com/problems/sort-colors/

2,0,2,1,1,0
2, 7, 9, 1, 3, 5
insertion sort
2
2, 7
2, 7, 9
1, 2, 7, 9
1, 2, 3, 7, 9
1, 2, 3, 5, 7, 9



https://www.interviewbit.com/problems/rotate-matrix/

https://www.interviewbit.com/problems/maximum-sum-triplet/

https://www.interviewbit.com/problems/perfect-peak-of-array/

https://www.interviewbit.com/problems/max-distance/

<-----------Merge Sort----------->
15 5 24 8 1 3 16 10 20

15 5 24 8 1		 						3 16 10 20 
15 5 24				8 1 				3 16		10	20 
15 5	24			8	1			3	16			10	20
15   5

Merge sort - >
if low<up{
//divide
mid = low + up /2
merge sort(Arr, low, mid);
merge sort(arr, mid+1, up);

merge(arr, low, mid, up);
}












